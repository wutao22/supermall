{"remainingRequest":"E:\\shop\\shop-project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\shop\\shop-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\shop\\shop-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\shop\\shop-project\\src\\views\\Detail\\index.vue?vue&type=template&id=978e6664&scoped=true&","dependencies":[{"path":"E:\\shop\\shop-project\\src\\views\\Detail\\index.vue","mtime":1660572581760},{"path":"E:\\shop\\shop-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649855859721},{"path":"E:\\shop\\shop-project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1649855862409},{"path":"E:\\shop\\shop-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649855859721},{"path":"E:\\shop\\shop-project\\node_modules\\vue-loader\\lib\\index.js","mtime":1649855861690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}